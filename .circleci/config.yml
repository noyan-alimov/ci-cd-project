version: 2.1

### It's a good practice to keep your commands at the top of the config file. In this project, you'll need at least 2 commands:

commands:
  install-dependencies:
    parameters:
      layer:
        type: string
    steps:
      - run: 
          name: Install << parameters.layer >> dependencies
          command: |
            cd << parameters.layer >>
            npm i
      # - slack/notify-on-failure

#   destroy-environment:
#     description: Destroy backend and frontend cloudformation stacks given a workflow ID.
#     ...

#   revert-migration:
#     description: Revert the last migration if successfully run in the current workflow.
#     ...

jobs:
  build-frontend:
    docker:
      - image: circleci/node
    steps:
      - checkout
      - install-dependencies:
          layer: "frontend"
      - run:
          name: Build Frontend
          command: |
            cd frontend
            npm run build
      # - slack/notify-on-failure

  build-backend:
    docker:
      - image: circleci/node
    steps:
      - checkout
      - install-dependencies:
          layer: "backend"
      - run:
          name: Build backend
          command: |
            cd backend
            npm run build
      # - slack/notify-on-failure

 test-frontend:
  docker:
    - image: circleci/node
  steps:
    - checkout
    - install-dependencies:
        layer: "frontend"
    - run:
        name: Unit test frontend
        command: |
          cd frontend
          mkdir -p ./reports/junit/
          npm run test:report
        environment:
          JEST_JUNIT_OUTPUT_DIR: "./reports/junit/"
    - store_test_results:
        path: ./frontend/reports/junit/
    # - slack/notify-on-failure

 test-backend:
  docker:
    - image: circleci/node
  steps:
    - checkout
    - install-dependencies:
        layer: "backend"
    - run:
        name: Unit test backend
        command: |
          cd backend
          mkdir -p ./reports/junit/
          npm run test:report
        environment:
          JEST_JUNIT_OUTPUT_DIR: "./reports/junit/"
    - store_test_results:
        path: ./backend/reports/junit/
    # - slack/notify-on-failure

#  can-frontend:

#  scan-backend:

#  deploy-infrastructure:

#  configure-infrastructure:

#  run-migrations:

#  deploy-frontend:

#  deploy-backend:  

#  smoke-test:

#  cloudfront-update:

workflows:
  default:
    jobs:
      - build-frontend
      - build-backend
      - test-frontend
      - test-backend
